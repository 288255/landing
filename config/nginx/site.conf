map $upstream_cache_status $revalidate_header {
        updating 1;
        bypass 1;
        default 0;
}

proxy_headers_hash_max_size 1024;
proxy_headers_hash_bucket_size 128;


proxy_cache_path /cache levels=1:2 keys_zone=cache:64m max_size=15g inactive=14d;

log_format custom '$http_x_forwarded_for - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" "$upstream_cache_status" "$request_time"';

server {
        listen 127.0.0.1:8081;

        gzip on;
        gzip_comp_level 5;
        gzip_proxied any;
        gzip_types image/png;
        gzip_vary on;

        root /var/www;
        server_name _ default_server;

        proxy_cache cache;
        proxy_cache_key "$request_uri";
        proxy_cache_methods GET HEAD;

        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_lock_age 5s;
        proxy_cache_lock_timeout 5s;
        proxy_cache_revalidate on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504 invalid_header;

        proxy_connect_timeout 5s;
        proxy_send_timeout 5m;
        proxy_read_timeout 5m;
        send_timeout 5m;

        access_log  /var/log/nginx/access.log custom;

        location /report.html {
                try_files /report.html =404;
        }

        location = / {
                try_files /home.html =404;
        }

        location / {

                proxy_cache_valid 200 302       30d;
                proxy_cache_valid 404           5m;

                proxy_pass http://127.0.0.1:9000/styles/liberty/256/;

                add_header X-Cache $upstream_cache_status;
                add_header X-Request-time $request_time;

                 # Add a custom header when the cache item is being revalidated
        proxy_set_header X-Cache-Status $upstream_cache_status;

        proxy_set_header X-Cache-Revalidate $revalidate_header;

        set $bypass 0;

            # Allow bypass if request includes correct secret token
            if ($http_x_refresh_token = "ADD_YOUR_TOKEN_HERE") {
                set $bypass 1;
            }

            proxy_cache_bypass $bypass;

                add_header 'Cache-Control' 'public, max-age 604800, stale-while-revalidate 604800, stale-if-error 604800';
                add_header Server-Timing "total;dur=$request_time;desc=\"$upstream_cache_status\"";
        }
}